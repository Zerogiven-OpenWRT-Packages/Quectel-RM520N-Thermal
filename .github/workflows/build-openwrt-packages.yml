name: Build OpenWRT Packages and Release

on:
  push:
    tags:
      - '*.*.*-r*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        openwrt_version: [24.10.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore SDK download cache
        uses: actions/cache@v3
        with:
          path: sdk-cache/${{ matrix.openwrt_version }}
          key: sdk-${{ matrix.openwrt_version }}-cache
          restore-keys: |
            sdk-${{ matrix.openwrt_version }}-cache

      - name: Ensure bin & cache directories and permissions
        run: |
          mkdir -p ${{ github.workspace }}/sdk-cache/${{ matrix.openwrt_version }} && \
          chmod -R a+rwX ${{ github.workspace }}/sdk-cache/${{ matrix.openwrt_version }} && \
          mkdir -p ${{ github.workspace }}/bin/${{ matrix.openwrt_version }} && \
          chmod -R a+rwX ${{ github.workspace }}/bin/${{ matrix.openwrt_version }}

      - name: Build package via OpenWRT SDK
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/sdk-cache/${{ matrix.openwrt_version }}:/downloads \
            -v ${{ github.workspace }}/bin/${{ matrix.openwrt_version }}:/builder/bin \
            --platform linux/amd64 \
            openwrt/sdk:x86-64-${{ matrix.openwrt_version }} \
            bash -eo pipefail -c '
              if [ -f ./setup.sh ]; then ./setup.sh; fi && \
              git clone --depth 1 --branch ${{ github.ref_name }} https://github.com/Zerogiven-OpenWRT-Packages/Quectel-RM520N-Thermal.git package/quectel-rm520n-thermal && \
              ./scripts/feeds update -a && \
              ./scripts/feeds install libuci libsysfs quectel-rm520n-thermal && \
              make defconfig && \
              make package/quectel-rm520n-thermal/download && \
              make package/quectel-rm520n-thermal/prepare && \
              make -j$(nproc) package/quectel-rm520n-thermal/compile'

      - name: Save SDK download cache
        uses: actions/cache@v3
        with:
          path: sdk-cache/${{ matrix.openwrt_version }}
          key: sdk-${{ matrix.openwrt_version }}-cache

      - name: Prepare Release Assets
        id: prep_assets
        run: |
          SHORT_VER=$(echo "${{ matrix.openwrt_version }}" | awk -F. '{print $1"."$2}')
          TARGET_DIR="${{ github.workspace }}/bin/${SHORT_VER}"
          mkdir -p "$TARGET_DIR"
          KMOD_IPK=$(find ${{ github.workspace }}/bin/${{ matrix.openwrt_version }} -name "kmod-quectel-rm520n-thermal*_all.ipk" | head -n1)
          DAEMON_IPK=$(find ${{ github.workspace }}/bin/${{ matrix.openwrt_version }} -name "quectel-rm520n-thermal*_all.ipk" | head -n1)
          if [[ -z "$KMOD_IPK" || -z "$DAEMON_IPK" ]]; then echo "IPK files not found" >&2; exit 1; fi
          cp "$KMOD_IPK" "$TARGET_DIR/" && cp "$DAEMON_IPK" "$TARGET_DIR/"
          echo "kmod_asset=$TARGET_DIR/$(basename "$KMOD_IPK")" >> "$GITHUB_OUTPUT"
          echo "daemon_asset=$TARGET_DIR/$(basename "$DAEMON_IPK")" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          body: ''
          draft: true
          prerelease: false
          files: |
            ${{ steps.prep_assets.outputs.kmod_asset }}
            ${{ steps.prep_assets.outputs.daemon_asset }}
        env:
          GITHUB_TOKEN: ${{ secrets.OWRT_PACKAGE_RELEASE_TOKEN }}
